# This workflow will build a Java project with Maven and create an executable JAR.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        # Usando a distribuição Temurin, comum para OpenJDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          # Configura o cache do Maven para acelerar builds futuros
          cache: maven

      - name: Build with Maven
        # Executa o goal 'package' do Maven.
        # Este goal executa todo o ciclo de vida atÃ© 'package',
        # incluindo compilaÃ§Ã£o, processamento de recursos, testes (se houver)
        # e a criaÃ§Ã£o do JAR executÃ¡vel (Fat JAR) usando o maven-shade-plugin
        # configurado no pom.xml.
        # -B: Modo batch (menos verboso)
        # --file pom.xml: Especifica o arquivo pom.xml (redundante se estiver na raiz, mas boa prÃ¡tica)
        run: mvn -B package --file pom.xml

      - name: Upload Fat JAR artifact
        # Faz o upload do JAR executÃ¡vel gerado pelo maven-shade-plugin como um artefato do workflow.
        # Isso permite baixar o JAR apÃ³s a conclusÃ£o do workflow.
        uses: actions/upload-artifact@v4
        with:
          # O nome do artefato. Pode ser qualquer nome descritivo.
          name: excel-editor-mvp-jar
          # O caminho para o arquivo ou diretÃ³rio a ser upado.
          # O maven-shade-plugin geralmente nomeia o Fat JAR como <artifactId>-<version>-shaded.jar
          # e o coloca no diretÃ³rio 'target'.
          path: target/excel-editor-mvp-1.0-SNAPSHOT-shaded.jar
          # Opcional: Define um tempo de retenÃ§Ã£o para o artefato (em dias). PadrÃ£o Ã© 90 dias.
          # retention-days: 5
